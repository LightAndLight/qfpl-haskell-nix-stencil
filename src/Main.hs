{-# language OverloadedLists #-}
{-# language OverloadedStrings #-}
{-# language QuasiQuotes #-}

import Stencil
import Stencil.CmdLine

import Data.String
import Turtle.Prelude hiding (stderr)

import qualified Data.Text as Text

import Licenses

cabalFile =
  [template|
-- Initial ${package-name}.cabal generated by cabal init.  For further documentation, 
-- see http://haskell.org/cabal/users-guide/

name:                ${package-name}
version:             ${version}
-- synopsis:
-- description:
license:             ${license}
--                   Must be spelled with a 'C' for nix
license-file:        LICENCE
author:              ${author-name}
maintainer:          ${author-email}
-- copyright:
-- category:
build-type:          Simple
extra-source-files:  ChangeLog.md
cabal-version:       >=1.10

library
  exposed-modules:     Blank
  -- other-modules:
  -- other-extensions:
  build-depends:       base >=4.9 && <5
  hs-source-dirs:      src
  default-language:    Haskell2010
|]

shellNix =
  [template|
{ nixpkgs ? import <nixpkgs> {}, compiler ? "ghc821" }:

let

  drv = import ./default.nix { inherit nixpkgs compiler; };

in

  drv.env
|]

defaultNix =
  [template|
{ nixpkgs ? import <nixpkgs> {}, compiler ? "ghc821" }:

let

  inherit (nixpkgs) pkgs;

  f = import ./${package-name}.nix;

  haskellPackages = if compiler == "default"
                       then pkgs.haskellPackages
                       else pkgs.haskell.packages.\${compiler};

  drv = haskellPackages.callPackage f {};

in

  drv
|]

gitignore =
  [template|
dist/
dist-newstyle/
result
|]

blankHaskellFile =
  [template|
module Blank where
|]

coolerCabalInit =
  promptRequired "package-name" "Package Name" *>
  promptDefault "version" "Version" "0.1.0.0" *>
  let
    d61 = ("Data61 BSD", fillTemplate [template|LICENCE|] csiroBsd *> pure "BSD3")
  in
  promptChoice
    "license"
    "License"
    [ ("GPL-2", pure "GPL-2")
    , ("GPL-3", pure "GPL-3")
    , ("LGPL-2.1", pure "LGPL-2.1")
    , ("LGPL-3", pure "LGPL-3")
    , ("BSD2", pure "BSD2")
    , ("BSD3", pure "BSD3")
    , d61
    , ("CSIRO MIT / BSD hybrid", fillTemplate [template|LICENCE|] csiroMitBsd *> pure "BSD3")
    , ("MIT", pure "MIT")
    , ("ISC", pure "ISC")
    , ("MPL-2.0", pure "MPL-2.0")
    , ("Apache-2.0", pure "Apache-2.0")
    , ("Public Domain", pure "PublicDomain")
    , ("All Rights Reserved", pure "AllRightsReserved")
    , ("Other", pure "OtherLicense")
    ]
    (Just d61) *>
  promptRequired "author-name" "Author Name" *>
  promptRequired "author-email" "Author Email" *>
  fillTemplate [template|${package-name}.cabal|] cabalFile *>
  fillTemplate [template|default.nix|] defaultNix *>
  fillTemplate [template|shell.nix|] shellNix *>
  fillTemplate [template|.gitignore|] gitignore *>
  mkDir "src" *>
  fillTemplate [template|src/Blank.hs|] blankHaskellFile *>
  templatedScript
    [template|${package-name}.nix|]
    (inproc "cabal2nix" ["."] mempty)
    (\val -> output (fromString $ Text.unpack val))

main = cmdLineApp coolerCabalInit
